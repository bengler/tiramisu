require 's3'
service = S3::Service.new(:access_key_id => "AKIAIEHYGLF4ZHKYVQEQ",
                          :secret_access_key => "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")
bucket = service.buckets.find("mocket")

class Interceptor
  def initialize(wrapped)
    @wrapped = wrapped
  end

  def respond_to?(method)
    @wrapped.respond_to?(method)
  end

  def method_missing(method, *args, &block)
    puts "#{method}(#{args.map(&:inspect).join(', ')})"
    puts @wrapped.pos
    @wrapped.send(method, *args, &block)
  end
end

o=bucket.objects.build("test.png")
o.content = Interceptor.new(File.open('/Users/simenss/Desktop/skrot/utsikten.jpg'))
o.save



# environment.rb

# TODO: Replace with config file
service = S3::Service.new(:access_key_id => "AKIAIEHYGLF4ZHKYVQEQ",
                      :secret_access_key => "tM5sZsScZwTy8qCiq/KtJ19p/RluGuyoeKpzBNoL")
$bucket = service.buckets.find("mocket")


# v1.rb

  post '/upload' do
    file = params['file']
    total_size = file[:tempfile].size
    new_object = $bucket.objects.build(file[:filename])
    new_object.content = Interceptor.intercept(file[:tempfile]) do |method, arguments|
      puts "#{file[:tempfile].pos*100/total_size}%"
    end
    new_object.save
    file[:tempfile].class.name
  end

  get '/tick' do
    stream do |out|
      11.times do |i|
        out << "#{i*10}\n"
        sleep 1
      end
    end
  end

